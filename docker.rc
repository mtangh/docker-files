# docker.rc
DOCKER_RC_FILE="${BASH_SOURCE##*/}"
DOCKERFILESDIR=$([ -n "${BASH_SOURCE%/*}" ] && cd "${BASH_SOURCE%/*}" 2>/dev/null; pwd)
DOCKER_BIN_DIR="${DOCKERFILESDIR}/_docker-bin"

# Paths
if [ -d "${DOCKER_BIN_DIR}" ]
then
  echo "$PATH" |
  grep -E '^(.+:|)'"${DOCKER_BIN_DIR}"'(:.+|)$' || {
    PATH="${PATH}:${DOCKER_BIN_DIR}"
    export PATH
  }
fi 1>/dev/null 2>&1

# Functions
[ -f "${DOCKER_BIN_DIR}/functions.sh" ] && {
  . "${DOCKER_BIN_DIR}/functions.sh"
} || return 1

# DOCKER Host
for dockerhostfile in \
  ./{.,}dockerhost \
  ${HOME}/.dockerhost \
  ${DOCKERFILESDIR}/{.,}dockerhost
do
  [ -r "$dockerhostfile" ] && {
    DOCKER_HOST=$(cat $dockerhostfile 2>/dev/null)
    break
  }
done
unset dockerhostfile
[ -z "${DOCKER_HOST}" ] &&
DOCKER_HOST=$(docker-host)
[ -n "${DOCKER_HOST}" ] &&
export DOCKER_HOST
[ -n "${DOCKER_HOST}" ] ||
echo "DOCKER_HOST is not set." 1>&2

# Aliases
alias docker-rc-reload=". ${DOCKERFILESDIR}/${DOCKER_RC_FILE} && echo OK"

alias docker-make="MAKE.sh --build-only"
alias docker-make-boot="MAKE.sh"
alias docker-make-rebuild="MAKE.sh --build-only --rebuild"
alias docker-make-clean="MAKE.sh --clean"

alias docker-clean=docker-cleanup

# end
[ -n "${DOCKER_HOST}" ]
return $?
# vim: set ff=unix ts=2 sw=2 sts=2 et : This line is VIM modeline
