#
# centos7-nodejs:nodejs-build
#
#@  DOCKER_CONTAINER=""
#@  DOCKER_IMAGE_TAG="centos7-nodejs:nodejs-build"
#@  DOCKER_BUILDOPTS=""
#@  DOCKER_BOOT_OPTS=""
#
FROM centos:centos7-systemd

# Labels
LABEL \
 build-stage="true"

# Work dir
ARG \
 WORKDIR=/tmp/workdir

# Set Workdir
WORKDIR \
 ${WORKDIR}

# Nodebrew
ARG \
 NODEBREW_URL=http://git.io/nodebrew
ARG \
 NODEBREW_ROOT=/opt/nodebrew

# Node version
ARG \
 NODE_VERSION=stable

# Node modules
ARG \
 DEFAULT_NODE_MODULES="bower grunt-cli gulp"

# Install RPM packages for nodejs
RUN \
 set -x; \
 : "Install RPM packages for nodejs" && { \
  yum -v -y update && \
  yum -v -y install gcc-c++ perl && \
  yum -v -y clean all && \
  rm -rf /var/cache/yum/*; \
 }; \
 echo;

# SetUp Nodebrew
RUN \
 set -x; \
 : "SetUp Nodebrew" && { \
  export NODEBREW_ROOT="${NODEBREW_ROOT:-/opt/nodebrew}"; \
  export PATH="$PATH:$NODEBREW_ROOT/current/bin"; \
  curl -sL "$NODEBREW_URL" |perl - setup && \
  nodebrew install-binary stable && \
  nodebrew use stable && \
  for item in "${NODEBREW_ROOT}/current/"{bin,lib}/*; \
  do \
   dest="${item##*$NODEBREW_ROOT/current/}"; \
   [ -x "$item" ] || continue; \
   [ -n "${dest%/*}" -a ! -d "/usr/local/${dest%/*}" ] && { \
    mkdir -p "/usr/local/${dest%/*}"; \
   }; \
   [ -n "$dest" -a -d "/usr/local/$dest" ] && { \
    rm -rf "/usr/local/$dest"; \
   }; \
   ln -sf "$item" "/usr/local/$dest"; \
  done; \
  [ ! -d "${NODEBREW_ROOT}/" ] || { \
   chown -R "root:root" "${NODEBREW_ROOT}/" || :; \
  }; \
  [ ! -x "/usr/local/bin/npm" ] || { \
   ln -sf /usr/local/bin/{npm,npm-g} || :; \
  }; \
 } && \
 : "SetUp /etc/profile.d/nodebrew.sh" && { \
  : && { \
   echo "# nodebrew.sh" && \
   echo "export NODEBREW_ROOT=$NODEBREW_ROOT" && \
   echo 'export PATH="$PATH:$NODEBREW_ROOT/current/bin"' && \
   echo ""; \
  } 1>/etc/profile.d/nodebrew.sh && \
  chown root:root /etc/profile.d/nodebrew.sh && \
  chmod 0755 /etc/profile.d/nodebrew.sh; \
 } && \
 : "Print node and npm version" && { \
  node -v && npm -v || :; \
 }; \
 echo;

# SetUp Nodebrew
RUN \
 set -x; \
 : "Install default node modules" && { \
  [ -z "${DEFAULT_NODE_MODULES}" ] || { \
   npm -g install ${DEFAULT_NODE_MODULES}; \
   npm -g cache clean; \
  } && \
  rm -rf /tmp/npm* || :; \
 } && \

# Cleanup
RUN \
 : "Cleanup" && { \
  for log in $(find /var/log -type f); \
  do [ -f "$log" ] && cat /dev/null 1>"$log"; done || :; \
  for log in {,/root,/tmp,/var/tmp}/*.log; \
  do rm -f "$log"; done || :; \
  yum -v -y clean all && rm -rf /var/cache/yum/*; \
  npm -g cache clean && rm -rf /tmp/npm*; \
  [ -n "${WORKDIR}" -a -d "${WORKDIR}" ] && { \
   cd /; rm -rf "${WORKDIR}"; } || :; \
 } 2>/dev/null; \
 echo;

# Reset Work dir
WORKDIR /

