#!/bin/bash
THIS="${0##*/}"
BASE="${THIS%.*}"
CDIR=$([ -n "${0%/*}" ] && cd "${0%/*}" 2>/dev/null; pwd)

# Load the tomcat-tools.rc
if [ -x "$CDIR/tomcat-tools.rc" ]
then
  . "$CDIR/tomcat-tools.rc" $@
else
  echo "$THIS: ABORTED: 'tomcat-tools.rc' not found" 1>&2
  exit 1
fi

# tomcat manager accounts
http_user="${TC_MANAGE_USER:-manager}"
http_pswd="${TC_MANAGE_PASS:-manager}"

# tomcat manager command
tomcatman="wget -q -O - --http-user=$http_user --http-password=$http_pswd"
tomcaturl="${TOMCAT_MAN_URL:-http://localhost:$CATALINA_PORT_HTTP/manager}"

# bash option
set -u

# deploy
function context_deploy() {
  _ctxname="$1"
  _warfile="$2"
  if [ -z "${_ctxname}" ]
  then
    echo echo "$THIS: context-name is not specified." 1>&2
    return 1
  fi
  if [ -d "${CATALINA_APPDIR}/${_ctxname}" ] ||
     [ -f "${CATALINA_APPDIR}/${_ctxname}.war" ]
  then
    echo "$THIS: context-name '$_ctxname' found. skipping." 1>&2
    return 1
  fi
  if [ -z "${_warfile}" ] ||
     [ ! -e "${_warfile}" ]
  then
    echo "$THIS: '$_warfile': no such file or directory." 1>&2
    return 1
  fi
  _ctxname="${_ctxname#*/}"
  basename="${_warfile##*/}"
  dir_name=$([ -n "${_warfile%/*}" ] && cd "${_warfile%/*}" 2>/dev/null; pwd)
  if [ -f "${dir_name}/${basename}" ]
  then
    $tomcatman "$tomcaturl/deploy?path=/${_ctxname}&war=file:${dir_name}/${basename}"
    _RET=$?
  else
    $tomcatman "$tomcaturl/deploy?path=/${_ctxname}&war=file:${dir_name}/${basename}"
    _RET=$?
  fi
  return $_RET;
}

# undeploy
function context_undeploy() {
  _ctxname="$1"
  if [ -z "$_ctxname" ]
  then
    echo "$THIS: context-name is not specified." 1>&2
    return 1
  fi
  if [ -e "$_ctxname" ] || 
     [ -e "${_ctxname}.war" ]
  then
    _ctxname="${_ctxname##*/}"
    _ctxname="${_ctxname%.*}"
  fi
  if [ ! -d "${CATALINA_APPDIR}/${_ctxname}" ] &&
     [ ! -f "${CATALINA_APPDIR}/${_ctxname}.war" ]
  then
    echo "$THIS: context-name '$_ctxname' not found." 1>&2
    return 1
  fi
  $tomcatman "$tomcaturl/undeploy?path=/${_ctxname}" ; _RET=$?
  if [ $_RET -eq 0 ]
  then
    removeCtxDir
    rm -f "${CATALINA_APPDIR}/${_ctxname}.war"
    rm -f "${CATALINA_CNFDIR}/Catalina/localhost/${_ctxname}.xml"
  fi 1>/dev/null 2>&1
  return $_RET
}

# start
function context_start() {
  _ctxname="$1"
  if [ -z "$_ctxname" ]
  then
    echo "$THIS: context-name is not specified." 1>&2
    return 1
  fi
  if [ -e "$_ctxname" ] || 
     [ -e "${_ctxname}.war" ]
  then
    _ctxname="${_ctxname##*/}"
    _ctxname="${_ctxname%.*}"
  fi
  if [ ! -d "${CATALINA_APPDIR}/${_ctxname}" ] &&
     [ ! -f "${CATALINA_APPDIR}/${_ctxname}.war" ]
  then
    echo "$THIS: context-name '$_ctxname' not found." 1>&2
    return 1
  fi
  $tomcatman "$tomcaturl/start?path=/${_ctxname}" ; _RET=$?
  return $_RET
}

# stop
function context_stop() {
  _ctxname="$1"
  if [ -z "$_ctxname" ]
  then
    echo "$THIS: context-name is not specified." 1>&2
    return 1
  fi
  if [ -e "$_ctxname" ] || 
     [ -e "${_ctxname}.war" ]
  then
    _ctxname="${_ctxname##*/}"
    _ctxname="${_ctxname%.*}"
  fi
  if [ ! -d "${CATALINA_APPDIR}/${_ctxname}" ] &&
     [ ! -f "${CATALINA_APPDIR}/${_ctxname}.war" ]
  then
    echo "$THIS: context-name '$_ctxname' not found." 1>&2
    return 1
  fi
  $tomcatman "$tomcaturl/stop?path=/${_ctxname}" ; _RET=$?
  return $_RET
}

# reload
function context_reload() {
  _ctxname="$1"
  if [ -z "$_ctxname" ]
  then
    echo "$THIS: context-name is not specified." 1>&2
    return 1
  fi
  if [ -e "$_ctxname" ] || 
     [ -e "${_ctxname}.war" ]
  then
    _ctxname="${_ctxname##*/}"
    _ctxname="${_ctxname%.*}"
  fi
  if [ ! -d "${CATALINA_APPDIR}/${_ctxname}" ] &&
     [ ! -f "${CATALINA_APPDIR}/${_ctxname}.war" ]
  then
    echo "$THIS: context-name '$_ctxname' not found." 1>&2
    return 1
  fi
  case "$TOMCAT_VERSION" in
  [0-6])
    : && {
      removeCtxDir "${_ctxname}" && unpackWar "${_ctxname}"
    } 1>/dev/null 2>&1
    ;;
  *)
    removeCtxDir "${_ctxname}" 1>/dev/null 2>&1
    ;;
  esac
  $tomcatman "$tomcaturl/reload?path=/${_ctxname}" ; _RET=$?
  return $_RET
}

# sessions
function context_sessions() {
  _ctxname="$1"
  if [ -z "$_ctxname" ]
  then
    echo "$THIS: context-name is not specified." 1>&2
    return 1
  fi
  if [ -e "$_ctxname" ] || 
     [ -e "${_ctxname}.war" ]
  then
    _ctxname="${_ctxname##*/}"
    _ctxname="${_ctxname%.*}"
  fi
  if [ ! -d "${CATALINA_APPDIR}/${_ctxname}" ] &&
     [ ! -f "${CATALINA_APPDIR}/${_ctxname}.war" ]
  then
    echo "$THIS: context-name '$_ctxname' not found." 1>&2
    return 1
  fi
  $tomcatman "$tomcaturl/sessions?path=/${_ctxname}" ; _RET=$?
  return $_RET
}

# expire
function context_expire() {
  _ctxname="$1"
  if [ -z "$_ctxname" ]
  then
    echo "$THIS: context-name is not specified." 1>&2
    return 1
  fi
  if [ -e "$_ctxname" ] || 
     [ -e "${_ctxname}.war" ]
  then
    _ctxname="${_ctxname##*/}"
    _ctxname="${_ctxname%.*}"
  fi
  if [ ! -d "${CATALINA_APPDIR}/${_ctxname}" ] &&
     [ ! -f "${CATALINA_APPDIR}/${_ctxname}.war" ]
  then
    echo "$THIS: context-name '$_ctxname' not found." 1>&2
    return 1
  fi
  $tomcatman "$tomcaturl/expire?path=/${_ctxname}" ; _RET=$?
  return $_RET
}

# remove context dir
function removeCtxDir() {
  _ctxname="${1}"
  if [ -z "${_ctxname}" ]
  then
    return 1
  fi
  if [ -e "$_ctxname" ] || 
     [ -e "${_ctxname}.war" ]
  then
    _ctxname="${_ctxname##*/}"
    _ctxname="${_ctxname%.*}"
  fi
  if [ ! -e "${CATALINA_APPDIR}/${_ctxname}.war" ] ||
     [ ! -d "${CATALINA_APPDIR}/${_ctxname}" ] ;
  then
    return 1
  fi
  (
    cd "${CATALINA_APPDIR}"
    [ -d "${_ctxname}" ] &&
      rm -rf "${_ctxname}"
  ) 2>&1
  return 0
}

# unpack war
function unpackWar() {
  _ctxname="${1}"
  if [ -z "${_ctxname}" ]
  then
    return 1
  fi
  if [ -e "$_ctxname" ] || 
     [ -e "${_ctxname}.war" ]
  then
    _ctxname="${_ctxname##*/}"
    _ctxname="${_ctxname%.*}"
  fi
  if [ ! -e "${CATALINA_APPDIR}/${_ctxname}.war" ]
  then
    return 1
  fi
  if [ -d "${CATALINA_APPDIR}/${_ctxname}" ]
  then
    return 1
  fi
  (
    cd "${CATALINA_APPDIR}"
    [ -d "${_ctxname}" ] ||
      mkdir -p "${_ctxname}"
    cd "${_ctxname}" &&
    $JAVA_HOME/bin/jar -xvf "${CATALINA_APPDIR}/${_ctxname}.war"
    /bin/chown -R "${TOMCAT_USER}:${TOMCAT_USER}" .
  ) 2>&1
  return 0
}

# Check port
/bin/netstat -an |grep ":${http_port}" 1>/dev/null 2>&1 || {
  cat <<_EOF_
$THIS: Could not connect to server '$INSTANCENAME'
   Is the server running locally and accepting connections on port $http_port" ?

_EOF_
  exit 127
}

# command
_retval=0
case "$1" in
deploy|install)
  context_deploy "$2" "$3"
  _retval=$?
  ;;
undeploy|remove)
  context_undeploy "$2"
  _retval=$?
  ;;
start|stop|reload|sessions|expire)
  context_$1 "$2"
  _retval=$?
  ;;
list)
  $tomcatman "$tomcaturl/list"
  _retval=$?
  ;;
*)
  echo "Usage: $THIS deploy context-name war-file"
  echo "       $THIS undeploy context-name"
  echo "       $THIS {start|stop|reload} context-name"
  echo "       $THIS {sessions|expire} context-name"
  echo "       $THIS list"
  _retval=1
  ;;
esac

# end of script
exit $_retval
