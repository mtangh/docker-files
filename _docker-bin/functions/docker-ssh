# docker-ssh

# docker ssh
docker-ssh() {
  local _container=""
  local _cinstance=""
  local _cimagetag=""
  local _buildpath=""
  local c_ssh_user="root"
  local c_ssh_host=$(docker-host-addr)
  local c_ssh_port=
  local c_ssh_opts="-oUserKnownHostsFile=/dev/null -oStrictHostKeyChecking=no"
  local c_cmndopts=""
  local _endofopts=0
  [ -z "$c_ssh_host" ] &&
  [ -n "$(type -P docker-machine)" ] && {
    c_ssh_host="$(docker-machine ip)"
  }
  eval $(getoptions \
    "|file:=_buildpath |name:=_cinstance |tag:=_cimagetag l|:=c_ssh_user p|:=c_ssh_port" "$@")
  while getoptions_has_next
  do
    eval $(getoptions_shift)
    case "$_getopt_V" in
    --)
      if [ $_endofopts -ne 0 ]
      then _endofopts=0
      else _endofopts=1
      fi
      ;;
    -*)
      c_ssh_opts="${c_ssh_opts:+$c_ssh_opts }$_getopt_V"
      ;;
    [A-Za-z]*@[0-9A-Za-z]*)
      c_ssh_user="${_getopt_V%%@*}"
      c_ssh_host="${_getopt_V#*@}"
      ;;
    *)
      if [ $_endofopts -eq 0 ]
      then c_ssh_opts="${c_ssh_opts:+$c_ssh_opts }$_getopt_V"
      else c_cmndopts="${c_cmndopts:+$c_cmndopts }$_getopt_V"
      fi
      ;;
    esac
  done
  [ -z "$buildpath" ] &&
  _buildpath="$(pwd)/Dockerfile"
  [ -r "$buildpath" -a -z "$_cinstance" ] &&
  _cinstance=$(docker-container-env DOCKER_CONTAINER "$_buildpath")
  [ -r "$buildpath" -a -z "$_cimagetag" ] &&
  _cimagetag=$(docker-container-env DOCKER_IMAGE_TAG "$_buildpath")
  [ -z "${c_ssh_port}" ] &&
  _container=$(
    get-container-id-all "$_cinstance" ||
    get-container-id-all "$_cimagetag" ||
    echo "")
  [ -z "${c_ssh_port}" ] &&
  [ -n "${_container}" ] &&
  c_ssh_port=$(get-container-port "$_container" 22)
  [ -n "${c_ssh_port}" ] &&
  ssh $c_ssh_opts -p "${c_ssh_port}" -l "$c_ssh_user" "$c_ssh_host" $c_cmndopts
  return $?
}

# vim: set ff=unix ts=2 sw=2 sts=2 et : This line is VIM modeline
