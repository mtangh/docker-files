# docker-bash

# docker bash
docker-bash() {
  local _container=""
  local _imagepath=""
  local _buildpath=""
  local _stage_key=""
  local _shellpath=""
  local _shellopts=()
  eval $(getoptions \
    "f|file:=_buildpath S|shell:=_shellpath" "${@}")
  while getoptions_has_next
  do
    eval $(getoptions_shift 2>/dev/null)
    case "${_getopt_V:=}" in
    +[0-9]*|@[0-9A-Za-z]*)
      _stage_key="${_getopt_V}"
      ;;
    *)
      if [ -z "${_container}" -a -z "${_imagepath}" ]
      then
        _container=$(container-get-id "${_getopt_V}") ||
        _imagepath=$(container-image-get-id "${_getopt_V}")
      else
        _shellopts=("${_shellopts[@]}" "${_getopt_V}")
      fi || :
      ;;
    esac
  done
  eval $(getoptions_end)
  if [ -z "${_stage_key}" -a -n "${_buildpath}" ]
  then
    if dockerfile-multi-stage "${_buildpath}" 1>/dev/null 2>&1
    then
      echo "Choose a stage to run."
      echo
      dockerfile-stage-list -FI "${_buildpath}" 2>/dev/null
      echo
      return 1
    else
      _stage_key="+0"
    fi
  fi
  if [ -n "${_stage_key}" -a -z "${_container}${_imagepath}" ]
  then
    _buildpath==$(dockerfile-get-path "${_buildpath}")
    _imagepath=$(
      dockerfile-imagepath-get "${_stage_key}" "${_buildpath}")
  fi || :
  if [ -z "${_container}" ]
  then
    _container=$(container-get-id "${_imagepath:-}")
  fi || :
  if [ -z "${_container}${_imagepath}" ]
  then
    cat <<_USAGE_
Usage: $FUNCNAME [CONTAINER|IMAGE] [BASH-ARG ...]
       $FUNCNAME [-f /path/to/Dockerfile] [+stage-index|@stage-name] [BASH-ARG ...]

_USAGE_
    return 2
  fi
  if [ -n "${_container}" ]
  then
    docker-exec -it "${_container}" -- \
      "${_shellpath:-/bin/bash}" "${_shellopts[@]}"
  else
    docker-run -it --rm "${_imagepath}" -- \
      "${_shellpath:-/bin/bash}" "${_shellopts[@]}"
  fi
  return $?
}

# vim: set ff=unix ts=2 sw=2 sts=2 et : This line is VIM modeline
