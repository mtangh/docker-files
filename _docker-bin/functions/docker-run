# docker-run

# docker run
docker-run() {
  local _cimagetag=""
  local _buildpath=""
  local _opts_path=""
  local _drun_opts=""
  local _cmnd_opts=""
  local _endofopts=0
  local _dockerret=0
  [ -n "${1:-}" ] && {
    [[ "${1:-}" =~ ^- ]] || {
      _cimagetag=$(get-image-tag "${1:-}" 2>/dev/null) && shift || :
    }
  } || :
  eval $(getoptions "|image:=_cimagetag f|file:=_buildpath" "$@")
  while getoptions_has_next
  do
    eval $(getoptions_shift 2>/dev/null)
    case "${_getopt_V:-}" in
    --)
      if [ ${_endofopts} -ne 0 ]
      then _endofopts=0
      else _endofopts=1
      fi
      ;;
    -*)
      if [ ${_endofopts} -eq 0 ]
      then _drun_opts="${_drun_opts:+${_drun_opts:-} }${_getopt_V}"
      else _cmnd_opts="${_cmnd_opts:+${_cmnd_opts:-} }${_getopt_V}"
      fi
      ;;
    *)
      if [ ${_endofopts} -eq 0 ]
      then
        case "${_getopt_V:-}" in
        \#[0-9]*|[0-9]*)
          _cimagetag=$(dockerfile-imagetag-get "${_getopt_V}" "${_buildpath}")
          ;;
        @[0-9A-Za-z]*|[A-Za-z]*)
          _cimagetag=$(dockerfile-imagetag-get "${_getopt_V}" "${_buildpath}")
          ;;
        *)
          _drun_opts="${_drun_opts:+${_drun_opts:-} }${_getopt_V}" || :
          ;;
        esac
      else
        _cmnd_opts="${_cmnd_opts:+${_cmnd_opts:-} }${_getopt_V}"
      fi
      ;;
    esac
  done
  [ -n "${_drun_opts}" ] &&
  [[ "${_drun_opts}" =~ ^((..*)[\ ]|[ ]*)([^\ -][^\ ]*)$ ]] && {
    _drun_opts="${BASH_REMATCH[2]}"
    [ -n "${BASH_REMATCH[3]}" ] && {
      _cimagetag=$(get-image-tag "${BASH_REMATCH[2]}" 2>/dev/null)
    }
  }
  _buildpath=$(
    dockerfile-get-path "${_buildpath:-}" 2>/dev/null )
  [ -r "${_buildpath}" -a -z "${_cimagetag}" ] && {
    dockerfile-multi-stage "${_buildpath}" 1>/dev/null 2>&1 && {
      dockerfile-stage-list --format "${_buildpath}" 2>/dev/null
      return 1
    } || :
    _cimagetag=$(dockerfile-env-get DOCKER_IMAGE_TAG "${_buildpath}")
  } || :
  [ -z "${_drun_opts}" -a -z "${_opts_path}" ] &&
  _opts_path="${DOCKERFILE_OPTS_RUN:-Dockerfile.opts.run}" || :
  [ -r "${_buildpath}" -a -z "${_drun_opts}" -a ! -r "${_opts_path}" ] &&
  _opts_path=$(dockerfile-env-get DOCKERFILE_OPTS_RUN "${_buildpath}") || :
  [ -z "${_drun_opts}" -a -s "${_opts_path}" ] &&
  _drun_opts=$(cat "${_opts_path}" 2>/dev/null|${AWK} '{printf(" %s",$0);}') || :
  [ -r "${_buildpath}" -a -z "${_drun_opts}" ] &&
  _drun_opts=$(dockerfile-env-get DOCKER_BOOT_OPTS "${_buildpath}") || :
  [ -n "${_cimagetag}" -a -z "${_drun_opts}" ] &&
  _drun_opts=$(get-image-property "docker.run.options" "${_cimagetag}") || :
  if [ -n "${_cimagetag}" ]
  then
    echo docker run ${_drun_opts} ${_cimagetag} ${_cmnd_opts} &&
    eval $(echo docker run ${_drun_opts} ${_cimagetag} ${_cmnd_opts})
    _dockerret=$?
  else
    docker run --help; echo; _dockerret=1
  fi
  return ${_dockerret}
}

# vim: set ff=unix ts=2 sw=2 sts=2 et : This line is VIM modeline
