# docker-images

# docker images
docker-images() {
  local _dimageopt=""
  local _header_id=$(printf "%-8s" ID)
  local _headerstr=$(printf "\t%-36s\t%-30s\t%s" REPOSITORY:TAG CREATED SIZE)
  local _formatopt="--format='"'{{ .ID }}\t{{ .Tag |printf "%s:%s" .Repository |printf "%-36s" }}\t{{ .CreatedAt }}\t{{ .Size }}'"'"
  eval $(getoptions "" "$@")
  while getoptions_has_next
  do
    eval $(getoptions_shift)
    case "${_getopt_V:=}" in
    --default)
      _header_id=""
      _headerstr=""
      _formatopt=""
      ;;
    --id)
      _header_id=$(printf "%-70s" ID)
      _headerstr=""
      _formatopt=""
      _formatopt="${_formatopt}"'{{ .ID }}'
      _formatopt="--format='${_formatopt}'"
      ;;
    --tag*)
      _header_id=""
      _headerstr=$(printf "%s" REPOSITORY:TAG)
      _formatopt=""
      _formatopt="${_formatopt}"'{{ .Tag |printf "%s:%s" .Repository |printf "%-36s" }}'
      _formatopt="--format='${_formatopt}'"
      ;;
    --no-header)
      _header_id=""
      _headerstr=""
      ;;
    --format*|--help)
      _dimageopt="${_dimageopt:+${_dimageopt} }${_getopt_V}"
      _header_id=""
      _headerstr=""
      _formatopt=""
      ;;
    --no-trunc)
      _dimageopt="${_dimageopt:+${_dimageopt} }${_getopt_V}"
      _header_id=$(printf "%-70s" ID)
      ;;
    --digests)
      _dimageopt="${_dimageopt:+${_dimageopt} }${_getopt_V}"
      _headerstr=$(printf "\t%-36s\t%-30s\t%-12s\t%s" REPOSITORY:TAG CREATED SIZE DIGEST)
      _formatopt=""
      _formatopt="${_formatopt}"'{{ .ID }}\t'
      _formatopt="${_formatopt}"'\t'
      _formatopt="${_formatopt}"'{{ .Tag |printf "%s:%s" .Repository |printf "%-36s" }}'
      _formatopt="${_formatopt}"'\t'
      _formatopt="${_formatopt}"'{{ .CreatedAt }}\t{{ .Size |printf "%-12s" }}'
      _formatopt="${_formatopt}"'\t'
      _formatopt="${_formatopt}"'{{ .Digest }}'
      _formatopt="--format='${_formatopt}'"
      ;;
    *)
      _dimageopt="${_dimageopt:+${_dimageopt} }${_getopt_V}"
      ;;
    esac
  done
  eval $(getoptions_end)
  [ -n "${_header_id}${_headerstr}" ] &&
  echo "${_header_id}${_headerstr}" || :
  eval $(echo docker images ${_formatopt} ${_dimageopt})
  return $?
}

# vim: set ff=unix ts=2 sw=2 sts=2 et : This line is VIM modeline
