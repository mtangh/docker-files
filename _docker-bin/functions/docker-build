# docker-build

# docker build
docker-build() {
  local _imagepath=""
  local _eachstage=0
  local _stage_ind=""
  local _stagename=""
  local _buildpath=""
  local _buildfile=""
  local _build_dir=""
  local _buildopts=""
  local _build_all=0
  local _targetlst=""
  local _targetind=""
  local _labelopts=""
  local _dockerret=0
  eval $(
getoptions "
f|file:=_buildpath
t|tag:=_imagepath
|target:=_targetind
|for-each-stage=_eachstage
" "$@")
  if [ -n "${_buildpath}" -a "${_buildpath}" != "${_buildpath##*/}" ]
  then
    _buildfile="${_buildpath##*/}"
    _build_dir="${_buildpath%/*}"
  fi
  while getoptions_has_next
  do
    eval $(getoptions_shift)
    case "${_getopt_V:=}" in
    --help)
cat <<_USAGE_
Usage: $FUNCNAME [OPTIONS] [+stage-index|@stage-name] [PATH]
_USAGE_
      ${DOCKER_CMD} build --help |egrep -v '^Usage' |tail -n +2
      echo
      return 0
      ;;
    -*)
      _buildopts="${_buildopts:+${_buildopts} }${_getopt_V}"
      ;;
    +[0-9]*)
      _stage_ind="${_getopt_V##*+}"
      ;;
    @[0-9A-Za-z]*)
      _stagename="${_getopt_V##*@}"
      ;;
    *)
      if getoptions_has_next
      then
        _buildopts="${_buildopts:+${_buildopts} }${_getopt_V}"
      else
        if [ -d "${_getopt_V}" ]
        then
          _build_dir="${_getopt_V}"
          _buildfile="${_buildfile:-Dockerfile}"
        elif [ -f "${_getopt_V}" ] &&
             [ "${_getopt_V}" != "${_getopt_V%/*}" ]
        then
          [ -z "${_buildfile}" ] &&
          _buildfile="${_getopt_V##*/}"
          _build_dir="${_getopt_V%/*}"
        fi 1>/dev/null 2>&1
      fi
      ;;
    esac
  done
  eval $(getoptions_end)
  if [ -n "${_build_dir}" ]
  then
    _buildpath=$(
      dockerfile-get-path \
      "${_build_dir}${_buildfile:+/${_buildfile}}")
  else
    _buildpath=$(
      dockerfile-get-path "${_buildpath}")
  fi 2>/dev/null
  _build_dir="${_buildpath%/*}"
  _buildfile="${_buildpath##*/}"
  if [ -r "${_buildpath}" ]
  then
    if [ -n "${_targetind}" ]
    then
      _stage_ind=$(dockerfile-stage-get-index "${_targetind}" "${_buildpath}")
      _stagename=$(dockerfile-stage-get-name "${_targetind}" "${_buildpath}")
      _targetind=""
    fi
    if [ -n "${_stagename}" -a -z "${_stage_ind}" ]
    then
      _stage_ind=$(dockerfile-stage-get-index "${_stagename}" "${_buildpath}")
      _targetind=""
    elif [ -n "${_stage_ind}" -a -n "${_stagename}" ]
    then
      _stagename=$(dockerfile-stage-get-name "${_stage_ind}" "${_buildpath}")
      -targetind=""
    fi
    if [ -n "${_stage_ind}${_stagename}" ]
    then
      _targetlst="${_stagename:-${_stage_ind}}"
    elif [ ${_eachstage:-0} -ne 0 ]
    then
      _targetlst=$(
        dockerfile-stage-list "${_buildpath}" |
        ${AWK} '{print($1);}' 2>/dev/null)
    fi
    if [ -z "${_targetlst}" ]
    then
      _targetlst="-"
    fi
  fi
  if [ -z "${_targetlst}" ]
  then
    ${DOCKER_CMD} build --help
    echo
    return 1
  fi
  [ -z "${_buildopts}" ] &&
  _buildopts=$(dockerfile-env_BUILDOPTS "${_buildpath}")
  for _targetind in ${_targetlst}
  do
    _imagepath=""
    _stagename=""
    if [ "${_targetind:--}" = "-" ]
    then _targetind=""
    fi
    if [ -n "${_targetind:--}" ]
    then _stagename=$(dockerfile-stage-get-name "+${_targetind}" "${_buildpath}")
    fi
    if [ "${_stagename:--}" = "-" ]
    then _stagename=""
    fi
    if [ -z "${_imagepath}" -a -n "${_targetind}" ]
    then _imagepath=$(dockerfile-imagepath-get "+${_targetind}" "${_buildpath}")
    fi
    if [ -z "${_imagepath}" ]
    then
      _imagepath=$(dockerfile-env_IMAGEPATH "${_buildpath}") ||
      _imagepath=$(dockerfile-imagepath-from-dir "${_buildpath}")
    fi 2>/dev/null
#   _labelopts="${_labelopts:+${_labelopts} }--label build-date="'"'$(date +'%Y%m%dT%H:%M%z')'"'
    _labelopts="${_labelopts:+${_labelopts} }--label docker.build.options="'"'"${_buildopts}"'"'
    echo ${DOCKER_CMD} build ${_buildopts} ${_labelopts} \
      ${_imagepath:+-t ${_imagepath}} ${_stagename:+--target=${_stagename}} \
      ${_buildpath:+-f ${_buildpath}} "${_build_dir:-.}" &&
    eval $(echo \
      ${DOCKER_CMD} build ${_buildopts} ${_labelopts} \
      ${_imagepath:+-t ${_imagepath}} ${_stagename:+--target=${_stagename}} \
      ${_buildpath:+-f ${_buildpath}} "${_build_dir:-.}")
    _dockerret=$?
    [ ${_dockerret} -eq 0 ] || break
  done
  return ${_dockerret}
}

# vim: set ff=unix ts=2 sw=2 sts=2 et : This line is VIM modeline
