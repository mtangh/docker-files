# docker-build

# docker build
docker-build() {
  local _imagepath=""
  local _image_ver=""
  local _imagefrom=""
  local _imglatest=""
  local _eachstage=0
  local _stage_ind=""
  local _stagename=""
  local _buildpath=""
  local _buildfile=""
  local _build_ctx=""
  local _buildopts=""
  local _meta_opts=""
  local _labelopts=""
  local _imtagopts=""
  local _imgtagent=""
  local _build_all=0
  local _targetlst=""
  local _targetind=""
  local _dockerret=0
  __docker_is_running || return 111
  eval $(
getoptions "
f|file:=_buildpath
t|tag:=_imagepath
|target:=_targetind
|for-each-stage=_eachstage
" "$@")
  while getoptions_has_next
  do
    eval $(getoptions_shift)
    case "${_getopt_V:=}" in
    --help)
      __docker_help build \
      "${FUNCNAME} [OPTIONS] [+stage-index|@stage-name] [PATH]"
      return 0
      ;;
    +[0-9]*)
      _stage_ind="${_getopt_V##*+}"
      ;;
    @[0-9A-Za-z]*)
      _stagename="${_getopt_V##*@}"
      ;;
    *)
      if getoptions_has_next
      then _buildopts="${_buildopts:+${_buildopts} }${_getopt_V}"
      else _build_ctx="${_getopt_V}"
      fi
      ;;
    esac
  done
  eval $(getoptions_end)
  if [ -n "${_imagepath:-}" ]
  then
    for _imgtagent in _imagepath
    do _imtagopts="${_imtagopts:+${_imtagopts} }-t ${_imgtagent}"
    done
  fi
  if [ -d "${_build_ctx:-.}" ]
  then :
  else
    __docker_invoke build ${_imtagopts} ${_buildopts} ${_build_ctx}
    return $?
  fi
  [ -z "${_buildpath}" -a -n "${_build_ctx}" ] &&
  _buildpath=$(dockerfile-get-path "${_build_ctx}") || :
  _buildpath=$(dockerfile-get-path "${_buildpath}") || :
  if [ -f "${_buildpath}" -a -r "${_buildpath}" ]
  then
    eval $(dockerfile-env-export "${_buildpath}")
    [ -n "${_targetind}" ] && {
      _stage_ind=$(dockerfile-stage-get-index "${_targetind}" "${_buildpath}")
      _stagename=$(dockerfile-stage-get-name "${_targetind}" "${_buildpath}")
      _targetind=""; } || :
    [ -n "${_stagename}" -a -z "${_stage_ind}" ] && {
      _stage_ind=$(dockerfile-stage-get-index "${_stagename}" "${_buildpath}")
      _targetind=""; } || :
    [ -z "${_stagename}" -a -n "${_stage_ind}" ] && {
      _stagename=$(dockerfile-stage-get-name "${_stage_ind}" "${_buildpath}")
      -targetind=""; } || :
    if [ -n "${_stagename}${_stage_ind}" ]
    then
      _targetlst=$(
        dockerfile-stage-get-index \
        "${_stagename:-${_stage_ind}}" "${_buildpath}")
    elif [ ${_eachstage:-0} -ne 0 ]
    then
      _targetlst=$(
        dockerfile-stage-list "${_buildpath}" |
        ${AWK} '{print($1);}' 2>/dev/null; )
    fi || :
    _targetlst="${_targetlst:--}"
    _stagename=""
    _stage_ind=""
  fi
  if [ -z "${_targetlst}" ]
  then
    __docker_help build \
    "${FUNCNAME} [OPTIONS] [+stage-index|@stage-name] [PATH]"
    return 1
  fi
  [ -z "${_image_ver}" ] &&
  _image_ver=$(dockerfile-env_IMAGE_VER "${_buildpath}") || :
  [ -z "${_imglatest}" ] &&
  _imglatest=$(dockerfile-env_LATEST_IS "${_buildpath}") || :
  [ -z "${_buildopts}" ] &&
  _buildopts=$(dockerfile-env_BUILDOPTS "${_buildpath}") || :
  for _targetind in ${_targetlst:--}
  do
    _imagepath=""
    _stagename=""
    _targetind="${_targetind#-}"
    if [ -n "${_targetind}" ]
    then
      _stagename=$(dockerfile-stage-get-name "${_targetind}" "${_buildpath}")
      _stagename="${_stagename#-}"
      _imagefrom=$(dockerfile-stage-get-from "+${_targetind}" "${_buildpath}")
      [ -z "${_imagepath}" ] && {
        _imagepath=$(dockerfile-imagepath-get "+${_targetind}" "${_buildpath}")
      } || :
    else
      if [ -z "${_imagepath}" ]
      then
        _imagepath=$(dockerfile-env_IMAGEPATH "${_buildpath}") ||
        _imagepath=$(dockerfile-imagepath-from-dir "${_buildpath}")
      fi 2>/dev/null
    fi
    [ -n "${_imagepath}" -a -n "${_image_ver}" ] && {
      _imgvertag="${_imagepath}-${_image_ver}"
    } || :
    [ "${_imagepath}" = "${DOCKER_LATEST_IS:-}" ] && {
      _imglatest="${DOCKER_LATEST_IS:-}"
    } || :
    _meta_opts=""
    [ -n "${_imagepath}" ] &&
    dockerfile-has-ARG _DOCKER_META_IMAGENAME "${_buildpath:-}" && {
      _meta_opts="${_meta_opts:+${_meta_opts} }--build-arg _DOCKER_META_IMAGENAME=${_imagepath}"
    } || :
    [ -n "${_stagename}" ] &&
    dockerfile-has-ARG _DOCKER_META_STAGENAME "${_buildpath:-}" && {
      _meta_opts="${_meta_opts:+${_meta_opts} }--build-arg _DOCKER_META_STAGENAME=${_stagename}"
    } || :
    [ -n "${_imagefrom}" ] &&
    dockerfile-has-ARG _DOCKER_META_IMAGEFROM "${_buildpath:-}" && {
      _meta_opts="${_meta_opts:+${_meta_opts} }--build-arg _DOCKER_META_IMAGEFROM=${_imagefrom}"
    } || :
    _imgtagent="${imtagopts:-}"
    [ -n "${_imagepath}" ] &&
    _imgtagent="${_imgtagent:+${_imgtagent} }-t ${_imagepath}" || :
    [ -n "${_imagepath}" -a -n "${_image_ver}" ] &&
    case "${_imagepath}" in
    *:*)
      _imgtagent="${_imgtagent:+${_imgtagent} }-t ${_imagepath}-${_image_ver}"
      ;;
    *:*)
      _imgtagent="${_imgtagent:+${_imgtagent} }-t ${_imagepath}:${_image_ver}"
      ;;
    esac || :
    [ -n "${_imagepath}" ] && [ "${_imagepath}" = "${_imglatest}" ] &&
    _imgtagent="${_imgtagent:+${_imgtagent} }-t ${_imagepath%:*}" || :
    _labelopts=""
    _labelopts="${_labelopts:+${_labelopts} }--label docker.build.options="'"'"${_buildopts}"'"'
    __docker_invoke build \
      ${_buildopts} ${_imgtagent} ${_meta_opts} ${_labelopts} \
      ${_stagename:+--target=${_stagename}} ${_buildpath:+-f ${_buildpath}} \
      "${_build_ctx:-.}"
    _dockerret=$?
    [ ${_dockerret} -eq 0 ] || break
  done
  return ${_dockerret}
}

# vim: set ff=unix ts=2 sw=2 sts=2 et : This line is VIM modeline
